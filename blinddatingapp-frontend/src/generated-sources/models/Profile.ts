/* tslint:disable */
/* eslint-disable */
/**
 * Profile Service API
 * Profile Service api definitie
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Characteristics } from './Characteristics';
import {
    CharacteristicsFromJSON,
    CharacteristicsFromJSONTyped,
    CharacteristicsToJSON,
} from './Characteristics';
import type { RomanticDate } from './RomanticDate';
import {
    RomanticDateFromJSON,
    RomanticDateFromJSONTyped,
    RomanticDateToJSON,
} from './RomanticDate';

/**
 * 
 * @export
 * @interface Profile
 */
export interface Profile {
    /**
     * 
     * @type {string}
     * @memberof Profile
     */
    username: string;
    /**
     * 
     * @type {string}
     * @memberof Profile
     */
    firstname?: string;
    /**
     * 
     * @type {string}
     * @memberof Profile
     */
    lastname?: string;
    /**
     * 
     * @type {string}
     * @memberof Profile
     */
    additionalInfo?: string;
    /**
     * 
     * @type {Characteristics}
     * @memberof Profile
     */
    personalInformation?: Characteristics;
    /**
     * 
     * @type {Characteristics}
     * @memberof Profile
     */
    dislikes?: Characteristics;
    /**
     * 
     * @type {Characteristics}
     * @memberof Profile
     */
    preferences?: Characteristics;
    /**
     * 
     * @type {Array<RomanticDate>}
     * @memberof Profile
     */
    dates?: Array<RomanticDate>;
}

/**
 * Check if a given object implements the Profile interface.
 */
export function instanceOfProfile(value: object): value is Profile {
    if (!('username' in value) || value['username'] === undefined) return false;
    return true;
}

export function ProfileFromJSON(json: any): Profile {
    return ProfileFromJSONTyped(json, false);
}

export function ProfileFromJSONTyped(json: any, ignoreDiscriminator: boolean): Profile {
    if (json == null) {
        return json;
    }
    return {
        
        'username': json['username'],
        'firstname': json['firstname'] == null ? undefined : json['firstname'],
        'lastname': json['lastname'] == null ? undefined : json['lastname'],
        'additionalInfo': json['additionalInfo'] == null ? undefined : json['additionalInfo'],
        'personalInformation': json['personalInformation'] == null ? undefined : CharacteristicsFromJSON(json['personalInformation']),
        'dislikes': json['dislikes'] == null ? undefined : CharacteristicsFromJSON(json['dislikes']),
        'preferences': json['preferences'] == null ? undefined : CharacteristicsFromJSON(json['preferences']),
        'dates': json['dates'] == null ? undefined : ((json['dates'] as Array<any>).map(RomanticDateFromJSON)),
    };
}

export function ProfileToJSON(value?: Profile | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'username': value['username'],
        'firstname': value['firstname'],
        'lastname': value['lastname'],
        'additionalInfo': value['additionalInfo'],
        'personalInformation': CharacteristicsToJSON(value['personalInformation']),
        'dislikes': CharacteristicsToJSON(value['dislikes']),
        'preferences': CharacteristicsToJSON(value['preferences']),
        'dates': value['dates'] == null ? undefined : ((value['dates'] as Array<any>).map(RomanticDateToJSON)),
    };
}

