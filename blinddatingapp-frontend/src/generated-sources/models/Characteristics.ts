/* tslint:disable */
/* eslint-disable */
/**
 * Profile Service API
 * Profile Service api definitie
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MusicGenre } from './MusicGenre';
import {
    MusicGenreFromJSON,
    MusicGenreFromJSONTyped,
    MusicGenreToJSON,
} from './MusicGenre';
import type { Gender } from './Gender';
import {
    GenderFromJSON,
    GenderFromJSONTyped,
    GenderToJSON,
} from './Gender';
import type { HairColor } from './HairColor';
import {
    HairColorFromJSON,
    HairColorFromJSONTyped,
    HairColorToJSON,
} from './HairColor';

/**
 * 
 * @export
 * @interface Characteristics
 */
export interface Characteristics {
    /**
     * 
     * @type {Gender}
     * @memberof Characteristics
     */
    gender?: Gender;
    /**
     * 
     * @type {string}
     * @memberof Characteristics
     */
    favoriteColor?: string;
    /**
     * 
     * @type {boolean}
     * @memberof Characteristics
     */
    pets?: boolean;
    /**
     * 
     * @type {HairColor}
     * @memberof Characteristics
     */
    hairColor?: HairColor;
    /**
     * 
     * @type {boolean}
     * @memberof Characteristics
     */
    tattoos?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Characteristics
     */
    sports?: string;
    /**
     * 
     * @type {Array<MusicGenre>}
     * @memberof Characteristics
     */
    musicGenres?: Array<MusicGenre>;
}

/**
 * Check if a given object implements the Characteristics interface.
 */
export function instanceOfCharacteristics(value: object): value is Characteristics {
    return true;
}

export function CharacteristicsFromJSON(json: any): Characteristics {
    return CharacteristicsFromJSONTyped(json, false);
}

export function CharacteristicsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Characteristics {
    if (json == null) {
        return json;
    }
    return {
        
        'gender': json['gender'] == null ? undefined : GenderFromJSON(json['gender']),
        'favoriteColor': json['favoriteColor'] == null ? undefined : json['favoriteColor'],
        'pets': json['pets'] == null ? undefined : json['pets'],
        'hairColor': json['hairColor'] == null ? undefined : HairColorFromJSON(json['hairColor']),
        'tattoos': json['tattoos'] == null ? undefined : json['tattoos'],
        'sports': json['sports'] == null ? undefined : json['sports'],
        'musicGenres': json['musicGenres'] == null ? undefined : ((json['musicGenres'] as Array<any>).map(MusicGenreFromJSON)),
    };
}

export function CharacteristicsToJSON(value?: Characteristics | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'gender': GenderToJSON(value['gender']),
        'favoriteColor': value['favoriteColor'],
        'pets': value['pets'],
        'hairColor': HairColorToJSON(value['hairColor']),
        'tattoos': value['tattoos'],
        'sports': value['sports'],
        'musicGenres': value['musicGenres'] == null ? undefined : ((value['musicGenres'] as Array<any>).map(MusicGenreToJSON)),
    };
}

